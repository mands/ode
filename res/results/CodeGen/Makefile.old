# Simple makefile for benchmarks
ROOT_DIR = ..
include $(ROOT_DIR)/Makefile.inc

all: sim.o0.exe sim.opt.exe sim.lto.exe sim.gcc.exe

# unoptimised
sim.o0.exe: hodgkin_opt.c
	@echo "** Building O0 **"
	$(CC) $(CFLAGS) -I$(ODE_INC_DIR) -O0 -emit-llvm -c -o model.o0.bc $<
	llvm-dis -o model.o0.ll model.o0.bc
	llvm-link -o sim.o0.bc model.o0.bc $(ODE_LIB_DIR)/odelibrary.bc 
	llvm-dis -o sim.o0.ll sim.o0.bc
	$(CC) $(CFLAGS) -O0 -o $@ sim.o0.bc $(LIBS)

# 03 opts
sim.opt.exe: sim.o0.exe
	@echo "** Building O3 **"
	opt -o model.opt.bc -std-compile-opts model.o0.bc
	llvm-link -o sim.opt.bc model.opt.bc $(ODE_LIB_DIR)/odelibrary.bc 
	llvm-dis -o sim.opt.ll sim.opt.bc
	$(CC) $(CFLAGS) -O3 -fno-math-errno -ffast-math -o $@ sim.opt.bc $(LIBS)

# 04 opts - O3 + LTO
sim.lto.exe: sim.opt.exe
	@echo "** Building LTO **"
	opt -o sim.lto.bc -std-link-opts -std-compile-opts sim.opt.bc
	llvm-dis -o sim.lto.ll sim.lto.bc
	$(CC) $(CFLAGS) -O3 -fno-math-errno -ffast-math -o $@ sim.lto.bc $(LIBS)

sim.gcc.exe: hodgkin_opt.c
	@echo "** Building GCC **"
	$(GCC) $(GCCFLAGS) -I$(ODE_INC_DIR) -O3 -fno-math-errno -ffast-math -o $@ $< $(ODE_LIB_DIR)/odelibrary.o -lm

hodgkin_gen: hodgkin_gen_model.c hodgkin_gen_solver.c
	@echo "** Building Hodkgin Generic **"
	$(GCC) $(GCCFLAGS) -I$(ODE_INC_DIR) -O3 -fno-math-errno -ffast-math -o $@ $< $(ODE_LIB_DIR)/odelibrary.o -lm


bench: sim.o0.exe sim.opt.exe sim.lto.exe
	dumbbench -vv ./sim.o0.exe  > bench.out
	dumbbench -vv ./sim.opt.exe >> bench.out
	dumbbench -vv ./sim.lto.exe >> bench.out
	dumbbench -vv ./sim.gcc.exe >> bench.out
	dumbbench -vv ./sim.lto.exe >> bench.out

clean:
	rm -f *.exe *.bc
	rm -f *.bin
	rm -f callgrind.* perf.data llvmprof.out bench.out
	rm -f *~

.PHONY: clean

