module Test {

   component addsub(x, y) {
        return (x + y, x - y)
    }
    val Xa,Ya = addsub(3, 4)

// test basic top lets
/*
	val X = 3
	val Y = 3 + 3
	val Z = 3 > 0 and Y > X
*/

// test component - Float -> Float
/* 
    component inc(x) {
        return (x + 1)
    }

    val X = inc(3)
    val Y = X + X
    val Z = Y + X + 23 
    val W = inc(5) + 2

    // what the fuck!
    // val Z = Y + X + Z
*/

// test component-local lets
/*
    component let(x) {
	    val y = x + 1
		return (x+y)
	}
*/
	
// more complicated components
// test (Float, Float) -> Float
/*
    component add(x, y) {
        return (x + y)
    }

    val X = add(3, 4)
*/
	
// test (Float, Float) -> (Float, Float)
/*
    component addsub(x, y) {
        return (x + y, x - y)
    }

    val X,Y = addsub(3, 4)
	// val Y,Z = X
*/

// component-local type error
/*
    component let(x) {
	    val y = x + 1
		val z = x and y
		return (x+y)
	}
*/
}
