// a version of PG's Mahajahn model, original takes approx 4min to simulate using CVODE
// no fancy modules yet

module Mahajan {
	//---------------------------------------------------------------------------
	// Initial values
	//---------------------------------------------------------------------------
  init y1 = 104.108060320073      /* Ca_NSR (uM) (in Ca) */
  init y2 = 1.91267853216796      /* Ca_dyad (uM) (in Ca) */
  init y3 = 0.216591220613237     /* Ca_i (uM) (in Ca) */
  init y4 = 0.206588249441256     /* Ca_submem (uM) (in Ca) */
  init y5 = 19.3132456227266      /* tropi (uM) (in Ca) */
  init y6 = 18.1964870238395      /* trops (uM) (in Ca) */
  init y7 = 1.77678273893783e-5   /* c1 (dimensionless) (in ICaL) */
  init y8 = 0.981806904399343     /* c2 (dimensionless) (in ICaL) */
  init y9 = 3.28810184500228e-5   /* xi1ba (dimensionless) (in ICaL) */
  init y10 = 0.000667715244070818 /* xi1ca (dimensionless) (in ICaL) */
  init y11 = 0.0150131872489933   /* xi2ba (dimensionless) (in ICaL) */
  init y12 = 0.0024597678895653   /* xi2ca (dimensionless) (in ICaL) */
  init y13 = 0.00684293689712338  /* xr (dimensionless) (in IKr) */
  init y14 = 0.0256917227076164   /* xs1 (dimensionless) (in IKs) */
  init y15 = 0.0769816106642697   /* xs2 (dimensionless) (in IKs) */
  init y16 = 0.991065948286682    /* xh (dimensionless) (in INa) */
  init y17 = 0.994131546457503    /* xj (dimensionless) (in INa) */
  init y18 = 0.00104347579348688  /* xm (dimensionless) (in INa) */
  init y19 = 99.4448177355167     /* Ca_JSR (uM) (in Irel) */
  init y20 = 0.00821527423360247  /* xir (uM_per_ms) (in Irel) */
  init y21 = 0.00359982129123271  /* xtof (dimensionless) (in Ito) */
  init y22 = 0.00360113747215906  /* xtos (dimensionless) (in Ito) */
  init y23 = 0.995225170570617    /* ytof (dimensionless) (in Ito) */
  init y24 = 0.201006999888848    /* ytos (dimensionless) (in Ito) */
  init y25 = 11.3241630632199     /* Na_i (mM) (in Na) */
  init y26 = -87.349438978933     /* V (mV) (in cell) */
  init y27 = 144.473230653346     /* K_i (mM) (in ionic_concentrations) */
  init y28 = 0.0                  /* xica */
  init y29 = 0.0                  /* xikr */
  init y30 = 0.0                  /* xiks */
  init y31 = 0.0                  /* xik1 */
  init y32 = 0.0                  /* xiNaK */
  init y33 = 0.0                  /* xito */

	//---------------------------------------------------------------------------
	// Constants
	//---------------------------------------------------------------------------
	val bcal = 24.0		/* uM (in Ca) */
	val bmem = 15.0		/* uM (in Ca) */	
	val bsar = 42.0		/* uM (in Ca) */
	val btrop = 70.0	/* uM (in Ca) */	
	val kmem = 0.3		/* uM (in Ca) */	
	val ksar = 13.0		/* uM (in Ca) */
	val srkd = 0.6		/* uM (in Ca) */	
	val srmax = 47.0	/* uM (in Ca) */	
	val taud = 4.0		/* ms (in Ca) */
	val taups = 0.5		/* ms (in Ca) */	
	val xkcal = 7.0		/* uM (in Ca) */	
	val xkoff = 0.0196	/* per_ms (in Ca) */
	val xkon = 0.0327	/* per_uM_per_ms (in Ca) */
	val Ca_o = 1.8		/* mM (in Environment) */			
	val F = 96.4853415	/* coulomb_per_mmole (in Environment) */
	val K_o = 5.4		/* mM (in Environment) */			
	val Na_o = 136.0	/* mM (in Environment) */
	val R = 8.314472	/* J_per_moleK (in Environment) */	
	val T = 308.0		/* kelvin (in Environment) */
	val cat = 3.0		/* uM (in ICaL) */					
	val cpt = 6.09365	/* uM (in ICaL) */
	val gca = 182.0		/* mmole_per_coulomb_cm (in ICaL) */
	val k1t = 0.00413	/* per_ms (in ICaL) */
	val k2 = 0.000103615/* per_ms (in ICaL) */				
	val k2t = 0.00224	/* per_ms (in ICaL) */
	val pca = 0.00054	/* cm_per_s (in ICaL) */			
	val r1 = 0.3		/* per_ms (in ICaL) */
	val r2 = 3.0		/* per_ms (in ICaL) */				
	val s1t = 0.00195	/* per_ms (in ICaL) */
	val s6 = 8.0		/* mV (in ICaL) */					
	val sx = 3.0		/* mV (in ICaL) */
	val sy = 4.0		/* mV (in ICaL) */					
	val syr = 11.32		/* mV (in ICaL) */
	val tau3 = 3.0		/* ms (in ICaL) */					
	val taupo = 1.0		/* ms (in ICaL) */
	val tca = 78.0329	/* ms (in ICaL) */					
	val vth = 0.0		/* mV (in ICaL) */
	val vx = -40.0		/* mV (in ICaL) */				
	val vy = -40.0		/* mV (in ICaL) */
	val vyr = -40.0		/* mV (in ICaL) */
	val gkix = 0.3		/* uS_per_nF (in IK1) */
	val gkr = 0.0125	/* uS_per_nF (in IKr) */
	val gks = 0.1386	/* uS_per_nF (in IKs) */
	val gNaCa = 0.84	/* uM_per_ms (in INaCa) */			
	val xkdna = 0.3		/* uM (in INaCa) */
	val xmcai = 0.0036	/* mM (in INaCa) */					
	val xmcao = 1.3		/* mM (in INaCa) */
	val xmnai = 12.3	/* mM (in INaCa) */					
	val xmnao = 87.5	/* mM (in INaCa) */
	val gNaK = 1.5		/* nA_per_nF (in INaK) */			
	val xkmko = 1.5		/* mM (in INaK) */
	val xkmnai = 12.0	/* mM (in INaK) */
	val gna = 12.0		/* uS_per_nF (in INa) */
	val A_atp = 2.0		/* mM (in Ikatp) */					
	val K_atp = 0.25	/* mM (in Ikatp) */
	val K_o_n = 5.4		/* mM (in Ikatp) */					
	val fkatp = 0.05	/* dimensionless (in Ikatp) */
	val gkatp = 4.4		/* uS_per_nF (in Ikatp) */
	val cup = 0.5		/* uM (in Ileak_Iup_Ixfer) */		
	val gleak = 2.069e-5/* per_ms (in Ileak_Iup_Ixfer) */
	val kj = 50.0		/* uM (in Ileak_Iup_Ixfer) */		
	val vup = 0.4		/* uM_per_ms (in Ileak_Iup_Ixfer) */
	val av = 11.3		/* per_ms (in Irel) */				
	val ax = 0.3576		/* per_mV (in Irel) */
	val ay = 0.05		/* per_mV (in Irel) */				
	val cstar = 90.0	/* uM (in Irel) */
	val gbarsr = 26841.8/* dimensionless (in Irel) */		
	val gdyad = 9000.0	/* mmole_per_coulomb_cm (in Irel) */
	val gryr = 2.58079	/* per_ms (in Irel) */				
	val taua = 100.0	/* ms (in Irel) */
	val taur = 30.0		/* ms (in Irel) */
	val gto = 1.0		/* dimensionless (in Ito) */		
	val gtof = 0.11		/* uS_per_nF (in Ito) */
	val gtos = 0.04		/* uS_per_nF (in Ito) */
	val stim_amplitude = -15.0	/* nA_per_nF (in cell) */	
	val stim_duration = 3.0		/* ms (in cell) */
	val stim_offset = 0.0		/* ms (in cell) */			
	val stim_period = 400.0		/* ms (in cell) */
	val wca = 8.0		/* mV_per_uM (in cell) */
	val prNaK = 0.01833	/* dimensionless (in reversal_potentials) */


	//--------------------------------------------------------------------------
	// Scaling parameters
	//--------------------------------------------------------------------------

	val ScaleFactorGCaL = 1.0	/* dimensionless (in ICaL) */	
	val ScaleFactorGKr = 1.0		/* dimensionless (in IKr) */
	val ScaleFactorGKs = 1.0	/* dimensionless (in IKs) */	
	val ScaleFactorGK1 = 1.0		/* dimensionless (in IK1) */
	val ScaleFactorGNaK = 1.0	/* dimensionless (in INaK) */	
	val ScaleFactorGto = 1.0		/* dimensionless (in Ito) */


	//------------------------------------------------------------------------
	// Computed variables
	//------------------------------------------------------------------------
	val bv = (1.0-av)*cstar-50.0
	val FonRT = F/(R*T)
	val s2t = s1t*r1/r2*k2t/k1t
	val sigma = (exp(Na_o/67.3)-1.0)/7.0
	val akik = pow(K_o/K_o_n, 0.24)
	val bkik = 1.0/(1.0+pow(A_atp/K_atp, 2.0))


	//------------------------------------------------------------------------------
	// Computation segment of code
	//------------------------------------------------------------------------------

	val bpxs = bcal*xkcal/((xkcal+y4)*(xkcal+y4))
	val spxs = srmax*srkd/((srkd+y4)*(srkd+y4))
	val mempxs = bmem*kmem/((kmem+y4)*(kmem+y4))
	val sarpxs = bsar*ksar/((ksar+y4)*(ksar+y4))
	val dcsib = 1.0/(1.0+bpxs+spxs+mempxs+sarpxs)
	val bpxi = bcal*xkcal/((xkcal+y3)*(xkcal+y3))
	val spxi = srmax*srkd/((srkd+y3)*(srkd+y3))
	val mempxi = bmem*kmem/((kmem+y3)*(kmem+y3))
	val sarpxi = bsar*ksar/((ksar+y3)*(ksar+y3))
	val dciib = 1.0/(1.0+bpxi+spxi+mempxi+sarpxi)
	val jd = (y4-y3)/taud
	val xbi = xkon*y3*(btrop-y5)-xkoff*y5
	val xbs = xkon*y4*(btrop-y6)-xkoff*y6
	val jup = vup*y3*y3/(y3*y3+cup*cup)
	val jleak = gleak*y1*y1/(y1*y1+kj*kj)*(y1*16.667-y3)
	val dCa_JSR = -y20+jup-jleak
	val po = 1.0-y10-y12-y9-y11-y7-y8

	val Qr0 = piecewise { (y19 > 50.0) and (y19 < cstar) : (y19-50.0)/1.0
	                    , y19 >= cstar : av*y19+bv
	                    , default : 0.0
	                    }

	val Qr = y1*Qr0/cstar
	val csm = y4/1000.0
	val za = y26*2.0*FonRT

  val rxa = piecewise { abs(za) < 0.001 : 4.0*pca*F*FonRT*(csm*exp(za)-0.341*Ca_o)/(2.0*FonRT)
                      , default : 4.0*pca*y26*F*FonRT*(csm*exp(za)-0.341*Ca_o)/(exp(za)-1.0)
                      }

	val xirp = po*Qr*abs(rxa)*gbarsr/1.0*exp(-ax*(y26+30.0))/(1.0+exp(-ax*(y26+30.0)))
	val xicap = po*gdyad*abs(rxa)
	val xiryr = xirp+xicap
	ode { init : y2, delta : ydot2 } = xiryr-(y2-y4)/taups
	val jca = ScaleFactorGCaL*gca*po*rxa
	val aloss = 1.0/(1.0+pow(xkdna/y4, 3.0))
	val zw3 = pow(y25, 3.0)*Ca_o*exp(y26*0.35*FonRT)-pow(Na_o, 3.0)*csm*exp(y26*(0.35-1.0)*FonRT)
	val zw4 = 1.0+0.2*exp(y26*(0.35-1.0)*FonRT)
	val yz1 = xmcao*pow(y25, 3.0)+pow(xmnao, 3.0)*csm
	val yz2 = pow(xmnai, 3.0)*Ca_o*(1.0+csm/xmcai)
	val yz3 = xmcai*pow(Na_o, 3.0)*(1.0+pow(y25/xmnai, 3.0))
	val yz4 = pow(y25, 3.0)*Ca_o+pow(Na_o, 3.0)*csm
	val zw8 = yz1+yz2+yz3+yz4
	val jNaCa = gNaCa*aloss*zw3/(zw4*zw8)
	ode { init : y4, delta : ydot4 } = dcsib*(50.0*(y20-jd-jca+jNaCa)-xbs)
	ode { init : y3, delta : ydot3 } = dciib*(jd-jup+jleak-xbi)
	ode { init : y1, delta : ydot1 } = dCa_JSR
	ode { init : y5, delta : ydot5 } = xbi
	ode { init : y6, delta : ydot6 } = xbs
	val poinf = 1.0/(1.0+exp(-(y26-vth)/s6))
	val alpha = poinf/taupo
	val beta = (1.0-poinf)/taupo
	val fca = 1.0/(1.0+pow(cat/y2, 3.0))
	val s1 = 0.0182688*fca
	val k1 = 0.024168*fca
	val s2 = s1*r1/r2*k2/k1
	val poi = 1.0/(1.0+exp(-(y26-vx)/sx))
	val k3 = (1.0-poi)/tau3
	val k3t = k3
	val Pr = 1.0-1.0/(1.0+exp(-(y26-vy)/sy))
	val recov = 10.0+4954.0*exp(y26/15.6)
	val tau_ca = tca/(1.0+pow(y2/cpt, 4.0))+0.1
	val tauca = (recov-tau_ca)*Pr+tau_ca
	val tauba = (recov-450.0)*Pr+450.0
	val Ps = 1.0/(1.0+exp(-(y26-vyr)/syr))
	val k6 = fca*Ps/tauca
	val k5 = (1.0-Ps)/tauca
	val k6t = Ps/tauba
	val k5t = (1.0-Ps)/tauba
	val k4 = k3*alpha/beta*k1/k2*k5/k6
	val k4t = k3t*alpha/beta*k1t/k2t*k5t/k6t
	ode { init : y7, delta : ydot7 } = alpha*y8+k2*y10+k2t*y9+r2*po-(beta+r1+k1t+k1)*y7
	ode { init : y8, delta : ydot8 } = beta*y7+k5*y12+k5t*y11-(k6+k6t+alpha)*y8
	ode { init : y10, delta : ydot10 } = k1*y7+k4*y12+s1*po-(k3+k2+s2)*y10
	ode { init : y9, delta : ydot9 } = k1t*y7+k4t*y11+s1t*po-(k3t+k2t+s2t)*y9
	ode { init : y12, delta : ydot12 } = k3*y10+k6*y8-(k5+k4)*y12
	ode { init : y11, delta : ydot11 } = k3t*y9+k6t*y8-(k5t+k4t)*y11
	val xica = 2.0*wca*jca
	//y28 = xica
	val ek = 1.0/FonRT*log(K_o/y27)
	val aki = 1.02/(1.0+exp(0.2385*(y26-ek-59.215)))
	val bki = (0.49124*exp(0.08032*(y26-ek+5.476))+1.0*exp(0.06175*(y26-ek-594.31)))/(1.0+exp(-0.5143*(y26-ek+4.753)))
	val xkin = aki/(aki+bki)
	val xik1 = ScaleFactorGK1*gkix*sqrt(K_o/5.4)*xkin*(y26-ek)
	//y31 = xik1

  val xkrv1 = piecewise { abs(y26+7.0) > 0.001 : 0.00138*1.0*(y26+7.0)/(1.0-exp(-0.123*(y26+7.0)))
                        , default : 0.00138/0.123
                        }
  
  val xkrv2 = piecewise { abs(y26+10.0) > 0.001 : 0.00061*1.0*(y26+10.0)/(exp(0.145*(y26+10.0))-1.0)
                        , default : 0.00061/0.145
                        }

	val taukr = 1.0/(xkrv1+xkrv2)
	val xkrinf = 1.0/(1.0+exp(-(y26+50.0)/7.5))
	val rg = 1.0/(1.0+exp((y26+33.0)/22.4))
	val xikr = ScaleFactorGKr*gkr*sqrt(K_o/5.4)*y13*rg*(y26-ek)
	//y29 = xikr
	ode { init : y13, delta : ydot13 } = (xkrinf-y13)/taukr
	val xs1ss = 1.0/(1.0+exp(-(y26-1.5)/16.7))
	val xs2ss = xs1ss

  val tauxs1 = piecewise  { abs(y26+30.0) < 0.001/0.0687 : 1.0/(0.0000719/0.148+0.000131/0.0687)
                          , default : 1.0/(0.0000719*(y26+30.0)/(1.0-exp(-0.148*(y26+30.0)))+0.000131*(y26+30.0)/(exp(0.0687*(y26+30.0))-1.0))
                          }

	val tauxs2 = 4.0*tauxs1
	val gksx = 1.0+0.8/(1.0+pow(0.5/y3, 3.0))
	val eks = 1.0/FonRT*log((K_o+prNaK*Na_o)/(y27+prNaK*y25))
	val xiks = ScaleFactorGKs*gks*gksx*y14*y15*(y26-eks)
	//y30 = xiks
	ode { init : y14, delta : ydot14 } = (xs1ss-y14)/tauxs1
	ode { init : y15, delta : ydot15 } = (xs2ss-y15)/tauxs2

  val am = piecewise  { abs(y26+47.13) > 0.001 : 0.32*1.0*(y26+47.13)/(1.0-exp(-0.1*(y26+47.13)))
                      , default : 3.2
                      }

	val bm = 0.08*exp(-y26/11.0)


  val ah, bh, aj, bj = piecewise  { y26 < -40.0 : ( 0.135*exp((80.0+y26)/-6.8)
                                                        	, 3.56*exp(0.079*y26)+310000.0*exp(0.35*y26)
		                                                      , (-127140.0*exp(0.2444*y26)-0.00003474*exp(-0.04391*y26))*1.0*(y26+37.78)/(1.0+exp(0.311*(y26+79.23)))
                  		                                    , 0.1212*exp(-0.01052*y26)/(1.0+exp(-0.1378*(y26+40.14)))
                                                          )
                                    , default : ( 0.0
                                                , 1.0/(0.13*(1.0+exp((y26+10.66)/-11.1)))
                                                , 0.0
                                                , 0.3*exp(-0.0000002535*y26)/(1.0+exp(-0.1*(y26+32.0)))
                                                )
                                    }


  // val (ah, bh, aj, bj) = (1,2,3,4)
  /*
  val ah = 1
  val bh = 2
  val aj = 3
  val bj = 4
  */
	ode { init : y16, delta : ydot16 } = ah*(1.0-y16)-bh*y16
	ode { init : y17, delta : ydot17 } = aj*(1.0-y17)-bj*y17
	ode { init : y18, delta : ydot18 } = am*(1.0-y18)-bm*y18
	val ena = 1.0/FonRT*log(Na_o/y25)
	val xina = gna*y16*y17*y18*y18*y18*(y26-ena)
	val xiNaCa = wca*jNaCa
	val fNaK = 1.0/(1.0+0.1245*exp(-0.1*y26*FonRT)+0.0365*sigma*exp(-y26*FonRT))
	val xiNaK = ScaleFactorGNaK*gNaK*fNaK*y25/(y25+xkmnai)*K_o/(K_o+xkmko)
	//y32 = xiNaK
	val xika = fkatp*gkatp*akik*bkik*(y26-ek)
	ode { init : y19, delta : ydot19 } = (y1-y19)/taua
	val sparkV = exp(-ay*(y26+30.0))/(1.0+exp(-ay*(y26+30.0)))
	val spark_rate = gryr/1.0*po*abs(rxa)*sparkV
	ode { init : y20, delta : ydot20 } = spark_rate*Qr-y20*(1.0-taur*dCa_JSR/y1)/taur
	val rt1 = -(y26+3.0)/15.0
	val rt2 = (y26+33.5)/10.0
	val rt3 = (y26+60.0)/10.0
	val rt4 = -y26/30.0*y26/30.0
	val rt5 = (y26+33.5)/10.0
	val xtos_inf = 1.0/(1.0+exp(rt1))
	val ytos_inf = 1.0/(1.0+exp(rt2))
	val xtof_inf = xtos_inf
	val ytof_inf = ytos_inf
	val rs_inf = 1.0/(1.0+exp(rt2))
	val txs = 9.0/(1.0+exp(-rt1))+0.5
	val tys = 3000.0/(1.0+exp(rt3))+30.0
	val txf = 3.5*exp(rt4)+1.5
	val tyf = 20.0/(1.0+exp(rt5))+20.0
	ode { init : y22, delta : ydot22 } = (xtos_inf-y22)/txs
	ode { init : y24, delta : ydot24 } = (ytos_inf-y24)/tys
	ode { init : y21, delta : ydot21 } = (xtof_inf-y21)/txf
	ode { init : y23, delta : ydot23 } = (ytof_inf-y23)/tyf
	val xitos = gtos*y22*(y24+0.5*rs_inf)*(y26-ek)
	val xitof = gtof*y21*y23*(y26-ek)
	val xito = ScaleFactorGto*gto*(xitos+xitof)
	//y33 = xito
	ode { init : y25, delta : ydot25 } = -(xina+3.0*xiNaK+3.0*xiNaCa)/(wca*1000.0)
  val time_ms = time * 1000 // need to operate in ms
	val past = floor(time_ms/stim_period)*stim_period
  val i_Stim = piecewise  { (time_ms-past >= stim_offset) and (time_ms-past <= stim_offset+stim_duration) : stim_amplitude
                          , default : 0.0
                          }

	val Itotal = -(xina+xik1+xikr+xiks+xito+xiNaCa+xica+xiNaK+i_Stim)
	ode { init : y26, delta : ydot26 } = Itotal
	ode { init : y27, delta : ydot27 } = -(xikr+xiks+xik1+xito-xiNaK*2.0+i_Stim+xika)/(wca*1000.0)
}

