/* Test model for the Original HH model 
*/

module HodgkinHuxley {

    component c1(x, y) {
        (x+y)
    }

    // brackets not required for component arg
    component c1 ins {
        (x+y)
    }

    component c1 (x, y) {
        val z = { // braces setup scope levels
            val z' = x
            z'
        } + 2

        (x + y)
        c1 (x, y)
        c1(a) + c1 a + // brackets not required for calling a comp
        
    }



    component membrane() {
        val Cm = 1
        val E_R = -75

        val i_Stim = piecewise {
            t >= 10 and t <= 10.5 : 20,
            default: 0
        }

        val i_K = potassium_channel(V, E_R)
        val i_Na = sodium_channel(V, E_R)
        val i_L = leakage_current(V, E_R)

        ode V = {initVal : -75, deltaVal: -(-i_Stim + i_Na + i_K + i_L) / Cm}

        return (V)
    }

    component leakage_current(V, E_R) {
        val g_L = 0.3
        val E_L = E_R + 10.613
        val i_L = g_L * (V - E_L)
        return (i_L)
    }

    component potassium_channel(V, E_R) {
        val n = potassium_channel_n_gate(V)
        val g_K = 36
        val E_K = E_R - 12
        val i_K = g_K * pow(n,4) * (V - E_K)
        return (i_K)
    }

    component potassium_channel_n_gate(V) {
        val alpha_n = (-0.01 * (V + 65)) / (exp(-(V + 65) / 10) - 1)
        val beta_n = 0.125 * exp((V+75) / 80)
        ode n = {initVal : 0.325, deltaVal: (alpha_n*(1-n) - (beta_n*n))}
        return (n)
    }
 
}
